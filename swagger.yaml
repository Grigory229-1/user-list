openapi: 3.0.3
info:
  title: sevise 
  description: |-
    test servise
  version: '1'

servers:
  - url: http://localhost:8080
tags:
  - name: user
    description: Operations about user
paths:
  /:
    get:
      tags:
        - user
      summary: return list name
      description: return list name
      operationId: GetList
      responses:
        '200':
          description: Successful operation
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserList'         
    post:
      tags:
        - user
      summary: Add user in list
      description: Add user anf get his id
      operationId: addUser
      requestBody:
        description: Add new user in the list
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUser'
        required: true    
      responses:
        '200':
          description: Successful operation
          content:
             text/plain:
              schema:
                $ref: '#/components/schemas/UserID' 
  /{id}:
    get:
      tags:
        - user
      summary: get user by id
      description: get user by id
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: 'id user in list'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
             text/plain:
              schema:
                $ref: '#/components/schemas/User' 
        '400':
          description: Bad Request
    put:
      tags:
        - user
      summary: Update user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: 'name that need to be deleted'
          required: true
          schema:
            type: integer
        - name: name
          in: query
          description: 'Update the first name of user in the list'
          schema:
            type: string
        - name: lastname
          in: query
          description: 'Update the last name of user in the list'
          schema:
            type: string    
        - name: age
          in: query
          description: 'Update the age of user in the list'
          schema:
            type: integer    
      responses:
        '200':
          description: User updated successfuly
        '400':
          description: Bad request
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: The ID that needs to be deleted
          required: true
          schema:
            type: integer
      responses:
        '200':
            description: User deleted successfully
        '400':
          description: Bad request
components:
  schemas:
    User:
      type: string
      example: 'Alise Bradley 20'
      xml:
        name: user
    AddUser:
      required:
      - name
      - lastname
      - age
      type: object
      properties:
        name:
          type: string
          example: Max
        lastname:
          type: string
          example: Cooper
        age:
          type: integer
          format: int64
          example: 10  
    UserList:
      type: string
      example: |-
        0 Tom Adams 15
        1 Alise Bradley 20
        2 Max Cooper 30
    UserID:
      type: integer
      example: 0